{"version":3,"names":["DEFAULT_APPBAR_HEIGHT","Appbar","children","dark","style","theme","rest","colors","isDarkTheme","mode","backgroundColor","customBackground","elevation","restStyle","StyleSheet","flatten","isDark","overlay","surface","primary","color","isLight","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","Platform","OS","hasAppbarContent","leftItemsCount","rightItemsCount","React","Children","forEach","child","isValidElement","type","AppbarContent","styles","appbar","spacing","toArray","filter","map","i","AppbarAction","AppbarBackAction","includes","props","white","black","marginLeft","alignItems","cloneElement","create","height","flexDirection","paddingHorizontal","width","withTheme","AppbarWithTheme"],"sources":["Appbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, Platform, StyleSheet, StyleProp } from 'react-native';\nimport color from 'color';\n\nimport AppbarContent from './AppbarContent';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport { black, white } from '../../styles/colors';\nimport overlay from '../../styles/overlay';\n\ntype Props = Partial<React.ComponentPropsWithRef<typeof View>> & {\n  /**\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Content of the `Appbar`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const DEFAULT_APPBAR_HEIGHT = 56;\n\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * By default Appbar uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/appbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *  <Appbar style={styles.bottom}>\n *    <Appbar.Action\n *      icon=\"archive\"\n *      onPress={() => console.log('Pressed archive')}\n *     />\n *     <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n *     <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n *     <Appbar.Action\n *       icon=\"delete\"\n *       onPress={() => console.log('Pressed delete')}\n *     />\n *   </Appbar>\n *  );\n *\n * export default MyComponent\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n * });\n * ```\n */\nconst Appbar = ({ children, dark, style, theme, ...rest }: Props) => {\n  const { colors, dark: isDarkTheme, mode } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = 4,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  let isDark: boolean;\n\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : typeof backgroundColor === 'string'\n        ? !color(backgroundColor).isLight()\n        : true;\n  }\n\n  let shouldCenterContent = false;\n  let shouldAddLeftSpacing = false;\n  let shouldAddRightSpacing = false;\n  if (Platform.OS === 'ios') {\n    let hasAppbarContent = false;\n    let leftItemsCount = 0;\n    let rightItemsCount = 0;\n\n    React.Children.forEach(children, (child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n\n    shouldCenterContent =\n      hasAppbarContent && leftItemsCount < 2 && rightItemsCount < 2;\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n  return (\n    <Surface\n      style={[{ backgroundColor }, styles.appbar, { elevation }, restStyle]}\n      {...rest}\n    >\n      {shouldAddLeftSpacing ? <View style={styles.spacing} /> : null}\n      {React.Children.toArray(children)\n        .filter((child) => child != null && typeof child !== 'boolean')\n        .map((child, i) => {\n          if (\n            !React.isValidElement(child) ||\n            ![AppbarContent, AppbarAction, AppbarBackAction].includes(\n              // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n              child.type\n            )\n          ) {\n            return child;\n          }\n\n          const props: { color?: string; style?: StyleProp<ViewStyle> } = {\n            color:\n              typeof child.props.color !== 'undefined'\n                ? child.props.color\n                : isDark\n                ? white\n                : black,\n          };\n\n          if (child.type === AppbarContent) {\n            props.style = [\n              // Since content is not first item, add extra left margin\n              i !== 0 && { marginLeft: 8 },\n              shouldCenterContent && { alignItems: 'center' },\n              child.props.style,\n            ];\n          }\n          return React.cloneElement(child, props);\n        })}\n      {shouldAddRightSpacing ? <View style={styles.spacing} /> : null}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4,\n  },\n  spacing: {\n    width: 48,\n  },\n});\n\nexport default withTheme(Appbar);\n\n// @component-docs ignore-next-line\nconst AppbarWithTheme = withTheme(Appbar);\n// @component-docs ignore-next-line\nexport { AppbarWithTheme as Appbar };\n"],"mappings":"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"}