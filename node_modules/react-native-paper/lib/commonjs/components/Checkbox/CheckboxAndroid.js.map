{"version":3,"names":["ANIMATION_DURATION","CheckboxAndroid","status","theme","disabled","onPress","testID","rest","current","scaleAnim","React","useRef","Animated","Value","isFirstRendering","animation","scale","useEffect","checked","sequence","timing","toValue","duration","useNativeDriver","start","indeterminate","checkedColor","color","colors","accent","uncheckedColor","text","alpha","dark","rgb","string","rippleColor","checkboxColor","fade","borderWidth","interpolate","inputRange","outputRange","icon","styles","container","transform","StyleSheet","absoluteFill","fillContainer","fill","borderColor","displayName","create","borderRadius","width","height","padding","alignItems","justifyContent","withTheme","CheckboxAndroidWithTheme"],"sources":["CheckboxAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst CheckboxAndroid = ({\n  status,\n  theme,\n  disabled,\n  onPress,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: scaleAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    const checked = status === 'checked';\n\n    Animated.sequence([\n      Animated.timing(scaleAnim, {\n        toValue: 0.85,\n        duration: checked ? ANIMATION_DURATION * scale : 0,\n        useNativeDriver: false,\n      }),\n      Animated.timing(scaleAnim, {\n        toValue: 1,\n        duration: checked\n          ? ANIMATION_DURATION * scale\n          : ANIMATION_DURATION * scale * 1.75,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }, [status, scaleAnim, scale]);\n\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n  const checkedColor = rest.color || theme.colors.accent;\n  const uncheckedColor =\n    rest.uncheckedColor ||\n    color(theme.colors.text)\n      .alpha(theme.dark ? 0.7 : 0.54)\n      .rgb()\n      .string();\n\n  let rippleColor, checkboxColor;\n\n  if (disabled) {\n    rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n    checkboxColor = theme.colors.disabled;\n  } else {\n    rippleColor = color(checkedColor).fade(0.32).rgb().string();\n    checkboxColor = checked ? checkedColor : uncheckedColor;\n  }\n\n  const borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0],\n  });\n\n  const icon = indeterminate\n    ? 'minus-box'\n    : checked\n    ? 'checkbox-marked'\n    : 'checkbox-blank-outline';\n\n  return (\n    <TouchableRipple\n      {...rest}\n      borderless\n      rippleColor={rippleColor}\n      onPress={onPress}\n      disabled={disabled}\n      // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n      accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n      accessibilityComponentType=\"button\"\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{ disabled, checked }}\n      accessibilityLiveRegion=\"polite\"\n      style={styles.container}\n      testID={testID}\n    >\n      <Animated.View style={{ transform: [{ scale: scaleAnim }] }}>\n        <MaterialCommunityIcon\n          allowFontScaling={false}\n          name={icon}\n          size={24}\n          color={checkboxColor}\n          direction=\"ltr\"\n        />\n        <View style={[StyleSheet.absoluteFill, styles.fillContainer]}>\n          <Animated.View\n            style={[\n              styles.fill,\n              { borderColor: checkboxColor },\n              { borderWidth },\n            ]}\n          />\n        </View>\n      </Animated.View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxAndroid.displayName = 'Checkbox.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6,\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fill: {\n    height: 14,\n    width: 14,\n  },\n});\n\nexport default withTheme(CheckboxAndroid);\n\n// @component-docs ignore-next-line\nconst CheckboxAndroidWithTheme = withTheme(CheckboxAndroid);\n// @component-docs ignore-next-line\nexport { CheckboxAndroidWithTheme as CheckboxAndroid };\n"],"mappings":"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"}