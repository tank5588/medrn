{"version":3,"names":["Searchbar","React","forwardRef","ref","clearAccessibilityLabel","clearIcon","icon","iconColor","customIconColor","inputStyle","onIconPress","placeholder","searchAccessibilityLabel","style","theme","value","rest","root","useRef","useImperativeHandle","input","current","focus","clear","setNativeProps","args","isFocused","blur","noop","Error","handleClearPress","onChangeText","colors","roundness","dark","fonts","textColor","text","font","regular","color","alpha","rgb","string","rippleColor","borderRadius","elevation","styles","container","size","I18nManager","isRTL","Platform","select","web","outline","primary","StyleSheet","create","flexDirection","alignItems","flex","fontSize","paddingLeft","alignSelf","textAlign","minWidth","withTheme"],"sources":["Searchbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  StyleProp,\n  TextInput,\n  I18nManager,\n  TextInputProps,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport IconButton from './IconButton';\nimport Surface from './Surface';\nimport { withTheme } from '../core/theming';\nimport type { IconSource } from './Icon';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\n\ntype Props = React.ComponentPropsWithRef<typeof TextInput> & {\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  clearAccessibilityLabel?: string;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  searchAccessibilityLabel?: string;\n  /**\n   * Hint text shown when the input is empty.\n   */\n  placeholder?: string;\n  /**\n   * The value of the text input.\n   */\n  value: string;\n  /**\n   * Icon name for the left icon button (see `onIconPress`).\n   */\n  icon?: IconSource;\n  /**\n   * Callback that is called when the text input's text changes.\n   */\n  onChangeText?: (query: string) => void;\n  /**\n   * Callback to execute if we want the left icon to act as button.\n   */\n  onIconPress?: () => void;\n  /**\n   * Set style of the TextInput component inside the searchbar\n   */\n  inputStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Custom color for icon, default will be derived from theme\n   */\n  iconColor?: string;\n  /**\n   * Custom icon for clear button, default will be icon close\n   */\n  clearIcon?: IconSource;\n};\n\ntype TextInputHandles = Pick<\n  TextInput,\n  'setNativeProps' | 'isFocused' | 'clear' | 'blur' | 'focus'\n>;\n\n/**\n * Searchbar is a simple input box where users can type search queries.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/searchbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Searchbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [searchQuery, setSearchQuery] = React.useState('');\n *\n *   const onChangeSearch = query => setSearchQuery(query);\n *\n *   return (\n *     <Searchbar\n *       placeholder=\"Search\"\n *       onChangeText={onChangeSearch}\n *       value={searchQuery}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n\n * ```\n */\nconst Searchbar = React.forwardRef<TextInputHandles, Props>(\n  (\n    {\n      clearAccessibilityLabel = 'clear',\n      clearIcon,\n      icon,\n      iconColor: customIconColor,\n      inputStyle,\n      onIconPress,\n      placeholder,\n      searchAccessibilityLabel = 'search',\n      style,\n      theme,\n      value,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const root = React.useRef<TextInput>(null);\n\n    React.useImperativeHandle(ref, () => {\n      const input = root.current;\n\n      if (input) {\n        return {\n          focus: () => input.focus(),\n          clear: () => input.clear(),\n          setNativeProps: (args: TextInputProps) => input.setNativeProps(args),\n          isFocused: () => input.isFocused(),\n          blur: () => input.blur(),\n        };\n      }\n\n      const noop = () => {\n        throw new Error('TextInput is not available');\n      };\n\n      return {\n        focus: noop,\n        clear: noop,\n        setNativeProps: noop,\n        isFocused: noop,\n        blur: noop,\n      };\n    });\n\n    const handleClearPress = () => {\n      root.current?.clear();\n      rest.onChangeText?.('');\n    };\n\n    const { colors, roundness, dark, fonts } = theme;\n    const textColor = colors.text;\n    const font = fonts.regular;\n    const iconColor =\n      customIconColor ||\n      (dark ? textColor : color(textColor).alpha(0.54).rgb().string());\n    const rippleColor = color(textColor).alpha(0.32).rgb().string();\n\n    return (\n      <Surface\n        style={[\n          { borderRadius: roundness, elevation: 4 },\n          styles.container,\n          style,\n        ]}\n      >\n        <IconButton\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          borderless\n          rippleColor={rippleColor}\n          onPress={onIconPress}\n          color={iconColor}\n          icon={\n            icon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"magnify\"\n                color={color}\n                size={size}\n                direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n          accessibilityLabel={searchAccessibilityLabel}\n        />\n        <TextInput\n          style={[\n            styles.input,\n            {\n              color: textColor,\n              ...font,\n              ...Platform.select({ web: { outline: 'none' } }),\n            },\n            inputStyle,\n          ]}\n          placeholder={placeholder || ''}\n          placeholderTextColor={colors.placeholder}\n          selectionColor={colors.primary}\n          underlineColorAndroid=\"transparent\"\n          returnKeyType=\"search\"\n          keyboardAppearance={dark ? 'dark' : 'light'}\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits=\"search\"\n          accessibilityRole=\"search\"\n          ref={root}\n          value={value}\n          {...rest}\n        />\n        <IconButton\n          borderless\n          disabled={!value}\n          accessibilityLabel={clearAccessibilityLabel}\n          color={value ? iconColor : 'rgba(255, 255, 255, 0)'}\n          rippleColor={rippleColor}\n          onPress={handleClearPress}\n          icon={\n            clearIcon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"close\"\n                color={color}\n                size={size}\n                direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n        />\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    minWidth: 0,\n  },\n});\n\nexport default withTheme(Searchbar);\n"],"mappings":"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"}