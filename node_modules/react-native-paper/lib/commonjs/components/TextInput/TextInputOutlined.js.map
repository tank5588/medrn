{"version":3,"names":["OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","disabled","editable","label","error","selectionColor","underlineColor","_underlineColor","outlineColor","customOutlineColor","activeOutlineColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","adornmentConfig","getAdornmentConfig","colors","fonts","font","regular","hasActiveOutline","focused","fontSize","fontSizeStyle","fontWeight","lineHeight","height","backgroundColor","background","textAlign","viewStyle","StyleSheet","flatten","MAXIMIZED_LABEL_FONT_SIZE","inputTextColor","activeColor","placeholderColor","errorColor","isTransparent","color","alpha","text","rgb","string","primary","placeholder","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","AdornmentSide","Left","AdornmentType","Icon","ADORNMENT_SIZE","ADORNMENT_OFFSET","minInputHeight","inputHeight","calculateInputHeight","topPosition","calculateLabelTopPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","calculatePadding","paddingOut","adjustPaddingOut","baseLabelTranslateY","placeholderOpacity","interpolatePlaceholder","labeled","measured","labelProps","placeholderStyle","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","roundness","maxFontSizeMultiplier","minHeight","leftLayout","rightLayout","leftAffixTopPosition","calculateOutlinedIconAndAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","getAdornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","paddingTop","LabelBackground","testID","ref","underlineColorAndroid","input","textAlignVertical","outline","Outline","borderRadius","borderWidth","borderColor","create","position","paddingHorizontal","top","bottom","paddingBottom","flexGrow","margin","zIndex"],"sources":["TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n} from 'react-native';\nimport color from 'color';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  ADORNMENT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n} from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, fonts } = theme;\n  const font = fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight,\n    height,\n    backgroundColor = colors.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n  if (disabled) {\n    const isTransparent = color(customOutlineColor).alpha() === 0;\n    inputTextColor = activeColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n    placeholderColor = colors.disabled;\n    outlineColor = isTransparent ? customOutlineColor : colors.disabled;\n  } else {\n    inputTextColor = colors.text;\n    activeColor = error ? colors.error : activeOutlineColor || colors.primary;\n    placeholderColor = colors.placeholder;\n    outlineColor = customOutlineColor || colors.placeholder;\n    errorColor = colors.error;\n  }\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    LABEL_PADDING_TOP\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor as ColorValue,\n    errorColor,\n    labelTranslationXOffset,\n    roundness: theme.roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT)) as number;\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        theme={theme}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop: LABEL_PADDING_TOP,\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel\n            parentState={parentState}\n            labelProps={labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n          {render?.({\n            testID: 'text-input-outlined',\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.isRTL\n                  ? 'right'\n                  : 'left',\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\ntype OutlineProps = {\n  activeColor: string;\n  hasActiveOutline?: boolean;\n  focused?: boolean;\n  outlineColor?: string;\n  backgroundColor: ColorValue;\n  theme: ReactNativePaper.Theme;\n};\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  focused,\n  backgroundColor,\n}: OutlineProps) => (\n  <View\n    testID=\"text-input-outline\"\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: focused ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"],"mappings":"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"}