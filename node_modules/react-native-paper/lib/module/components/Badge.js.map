{"version":3,"names":["React","Animated","StyleSheet","white","black","withTheme","getContrastingColor","defaultSize","Badge","children","size","style","theme","visible","rest","current","opacity","useRef","Value","isFirstRendering","animation","scale","useEffect","timing","toValue","duration","useNativeDriver","start","backgroundColor","colors","notification","restStyle","flatten","textColor","borderRadius","color","fontSize","fonts","regular","lineHeight","height","minWidth","styles","container","create","alignSelf","textAlign","textAlignVertical","paddingHorizontal","overflow"],"sources":["Badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport { white, black } from '../styles/colors';\nimport { withTheme } from '../core/theming';\nimport getContrastingColor from '../utils/getContrastingColor';\n\nconst defaultSize = 20;\n\ntype Props = React.ComponentProps<typeof Animated.Text> & {\n  /**\n   * Whether the badge is visible\n   */\n  visible?: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  style?: StyleProp<TextStyle>;\n  ref?: React.RefObject<typeof Animated.Text>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Badges are small status descriptors for UI elements.\n * A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-1.png\" />\n *     <figcaption>Badge with content</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-2.png\" />\n *     <figcaption>Badge without content</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Badge } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Badge>3</Badge>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Badge = ({\n  children,\n  size = defaultSize,\n  style,\n  theme,\n  visible = true,\n  ...rest\n}: Props) => {\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [visible, opacity, scale]);\n\n  const { backgroundColor = theme.colors.notification, ...restStyle } =\n    (StyleSheet.flatten(style) || {}) as TextStyle;\n\n  const textColor = getContrastingColor(backgroundColor, white, black);\n\n  const borderRadius = size / 2;\n\n  return (\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          opacity,\n          backgroundColor,\n          color: textColor,\n          fontSize: size * 0.5,\n          ...theme.fonts.regular,\n          lineHeight: size,\n          height: size,\n          minWidth: size,\n          borderRadius,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n};\n\nexport default withTheme(Badge);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden',\n  },\n});\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAA2D,cAA3D;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,kBAA7B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAG,QAOD;EAAA,IAPE;IACbC,QADa;IAEbC,IAAI,GAAGH,WAFM;IAGbI,KAHa;IAIbC,KAJa;IAKbC,OAAO,GAAG,IALG;IAMb,GAAGC;EANU,CAOF;EACX,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAAuBhB,KAAK,CAACiB,MAAN,CAC3B,IAAIhB,QAAQ,CAACiB,KAAb,CAAmBL,OAAO,GAAG,CAAH,GAAO,CAAjC,CAD2B,CAA7B;EAGA,MAAMM,gBAAgB,GAAGnB,KAAK,CAACiB,MAAN,CAAsB,IAAtB,CAAzB;EAEA,MAAM;IACJG,SAAS,EAAE;MAAEC;IAAF;EADP,IAEFT,KAFJ;EAIAZ,KAAK,CAACsB,SAAN,CAAgB,MAAM;IACpB;IACA,IAAIH,gBAAgB,CAACJ,OAArB,EAA8B;MAC5BI,gBAAgB,CAACJ,OAAjB,GAA2B,KAA3B;MACA;IACD;;IAEDd,QAAQ,CAACsB,MAAT,CAAgBP,OAAhB,EAAyB;MACvBQ,OAAO,EAAEX,OAAO,GAAG,CAAH,GAAO,CADA;MAEvBY,QAAQ,EAAE,MAAMJ,KAFO;MAGvBK,eAAe,EAAE;IAHM,CAAzB,EAIGC,KAJH;EAKD,CAZD,EAYG,CAACd,OAAD,EAAUG,OAAV,EAAmBK,KAAnB,CAZH;EAcA,MAAM;IAAEO,eAAe,GAAGhB,KAAK,CAACiB,MAAN,CAAaC,YAAjC;IAA+C,GAAGC;EAAlD,IACH7B,UAAU,CAAC8B,OAAX,CAAmBrB,KAAnB,KAA6B,EADhC;EAGA,MAAMsB,SAAS,GAAG3B,mBAAmB,CAACsB,eAAD,EAAkBzB,KAAlB,EAAyBC,KAAzB,CAArC;EAEA,MAAM8B,YAAY,GAAGxB,IAAI,GAAG,CAA5B;EAEA,oBACE,oBAAC,QAAD,CAAU,IAAV;IACE,aAAa,EAAE,CADjB;IAEE,KAAK,EAAE,CACL;MACEM,OADF;MAEEY,eAFF;MAGEO,KAAK,EAAEF,SAHT;MAIEG,QAAQ,EAAE1B,IAAI,GAAG,GAJnB;MAKE,GAAGE,KAAK,CAACyB,KAAN,CAAYC,OALjB;MAMEC,UAAU,EAAE7B,IANd;MAOE8B,MAAM,EAAE9B,IAPV;MAQE+B,QAAQ,EAAE/B,IARZ;MASEwB;IATF,CADK,EAYLQ,MAAM,CAACC,SAZF,EAaLZ,SAbK;EAFT,GAiBMjB,IAjBN,GAmBGL,QAnBH,CADF;AAuBD,CA7DD;;AA+DA,eAAeJ,SAAS,CAACG,KAAD,CAAxB;AAEA,MAAMkC,MAAM,GAAGxC,UAAU,CAAC0C,MAAX,CAAkB;EAC/BD,SAAS,EAAE;IACTE,SAAS,EAAE,UADF;IAETC,SAAS,EAAE,QAFF;IAGTC,iBAAiB,EAAE,QAHV;IAITC,iBAAiB,EAAE,CAJV;IAKTC,QAAQ,EAAE;EALD;AADoB,CAAlB,CAAf"}