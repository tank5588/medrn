{"version":3,"names":["React","View","TextInput","NativeTextInput","StyleSheet","I18nManager","Platform","color","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","InputLabel","LabelBackground","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","ADORNMENT_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","interpolatePlaceholder","calculateOutlinedIconAndAffixTopPosition","AdornmentType","AdornmentSide","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","disabled","editable","label","error","selectionColor","underlineColor","_underlineColor","outlineColor","customOutlineColor","activeOutlineColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","adornmentConfig","colors","fonts","font","regular","hasActiveOutline","focused","fontSize","fontSizeStyle","fontWeight","lineHeight","height","backgroundColor","background","textAlign","viewStyle","flatten","inputTextColor","activeColor","placeholderColor","errorColor","isTransparent","alpha","text","rgb","string","primary","placeholder","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","Left","Icon","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","measured","labelProps","placeholderStyle","wiggleOffsetX","roundness","maxFontSizeMultiplier","minHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","paddingTop","testID","ref","underlineColorAndroid","input","textAlignVertical","outline","Outline","borderRadius","borderWidth","borderColor","create","position","paddingHorizontal","top","bottom","paddingBottom","flexGrow","margin","zIndex"],"sources":["TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n} from 'react-native';\nimport color from 'color';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  ADORNMENT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n} from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, fonts } = theme;\n  const font = fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight,\n    height,\n    backgroundColor = colors.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n  if (disabled) {\n    const isTransparent = color(customOutlineColor).alpha() === 0;\n    inputTextColor = activeColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n    placeholderColor = colors.disabled;\n    outlineColor = isTransparent ? customOutlineColor : colors.disabled;\n  } else {\n    inputTextColor = colors.text;\n    activeColor = error ? colors.error : activeOutlineColor || colors.primary;\n    placeholderColor = colors.placeholder;\n    outlineColor = customOutlineColor || colors.placeholder;\n    errorColor = colors.error;\n  }\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    LABEL_PADDING_TOP\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor as ColorValue,\n    errorColor,\n    labelTranslationXOffset,\n    roundness: theme.roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT)) as number;\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        theme={theme}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop: LABEL_PADDING_TOP,\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel\n            parentState={parentState}\n            labelProps={labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n          {render?.({\n            testID: 'text-input-outlined',\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.isRTL\n                  ? 'right'\n                  : 'left',\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\ntype OutlineProps = {\n  activeColor: string;\n  hasActiveOutline?: boolean;\n  focused?: boolean;\n  outlineColor?: string;\n  backgroundColor: ColorValue;\n  theme: ReactNativePaper.Theme;\n};\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  focused,\n  backgroundColor,\n}: OutlineProps) => (\n  <View\n    testID=\"text-input-outline\"\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: focused ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"],"mappings":"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"}