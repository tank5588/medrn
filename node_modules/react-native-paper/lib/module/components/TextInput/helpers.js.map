{"version":3,"names":["LABEL_PADDING_HORIZONTAL","ADORNMENT_OFFSET","ADORNMENT_SIZE","FLAT_INPUT_OFFSET","AdornmentType","AdornmentSide","calculateLabelTopPosition","labelHeight","height","optionalPadding","customHeight","Math","floor","calculateInputHeight","minHeight","finalHeight","calculatePadding","props","multiline","result","calculateTextAreaPadding","calculateInputPadding","max","dense","topPosition","fontSize","scale","offset","isAndroid","refFontSize","min","adjustPaddingOut","pad","label","lineHeight","fontHeight","refFontHeight","paddingTop","paddingBottom","adjustPaddingFlat","styles","topResult","bottomResult","interpolatePlaceholder","labeled","hasActiveOutline","interpolate","inputRange","outputRange","calculateFlatAffixTopPosition","affixHeight","inputHeightWithoutPadding","halfOfTheInputHeightDecreasedByAffixHeight","calculateOutlinedIconAndAffixTopPosition","labelYOffset","calculateFlatInputHorizontalPadding","adornmentConfig","paddingLeft","paddingRight","forEach","type","side","Icon","Left","Right","Affix"],"sources":["helpers.tsx"],"sourcesContent":["import type { Animated } from 'react-native';\nimport type { AdornmentConfig } from './Adornment/types';\nimport {\n  LABEL_PADDING_HORIZONTAL,\n  ADORNMENT_OFFSET,\n  ADORNMENT_SIZE,\n  FLAT_INPUT_OFFSET,\n} from './constants';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport type { TextInputLabelProp } from './types';\n\ntype PaddingProps = {\n  height: number | null;\n  labelHalfHeight: number;\n  multiline: boolean | null;\n  dense: boolean | null;\n  topPosition: number;\n  fontSize: number;\n  lineHeight?: number;\n  label?: TextInputLabelProp | null;\n  scale: number;\n  offset: number;\n  isAndroid: boolean;\n  styles: { paddingTop: number; paddingBottom: number };\n};\n\ntype AdjProps = PaddingProps & {\n  pad: number;\n};\n\nexport type Padding = { paddingTop: number; paddingBottom: number };\n\nexport const calculateLabelTopPosition = (\n  labelHeight: number,\n  height: number = 0,\n  optionalPadding: number = 0\n): number => {\n  const customHeight = height > 0 ? height : 0;\n\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexport const calculateInputHeight = (\n  labelHeight: number,\n  height: any = 0,\n  minHeight: number\n): number => {\n  const finalHeight = height > 0 ? height : labelHeight;\n\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexport const calculatePadding = (props: PaddingProps): number => {\n  const { height, multiline = false } = props;\n\n  let result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nconst calculateTextAreaPadding = (props: PaddingProps) => {\n  const { dense } = props;\n\n  return dense ? 10 : 20;\n};\n\nconst calculateInputPadding = ({\n  topPosition,\n  fontSize,\n  multiline,\n  scale,\n  dense,\n  offset,\n  isAndroid,\n}: PaddingProps): number => {\n  const refFontSize = scale * fontSize;\n  let result = Math.floor(topPosition / 2);\n\n  result =\n    result +\n    Math.floor((refFontSize - fontSize) / 2) -\n    (scale < 1 ? offset / 2 : 0);\n\n  if (multiline && isAndroid)\n    result = Math.min(dense ? offset / 2 : offset, result);\n\n  return result;\n};\n\nexport const adjustPaddingOut = ({\n  pad,\n  multiline,\n  label,\n  scale,\n  height,\n  fontSize,\n  lineHeight,\n  dense,\n  offset,\n  isAndroid,\n}: AdjProps): Padding => {\n  const fontHeight = lineHeight ?? fontSize;\n  const refFontHeight = scale * fontSize;\n  let result = pad;\n\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2),\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, (refFontHeight / 2) * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result +=\n          scale < 1\n            ? Math.min(offset, refFontHeight * scale)\n            : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return { paddingTop: result, paddingBottom: result };\n};\n\nexport const adjustPaddingFlat = ({\n  pad,\n  scale,\n  multiline,\n  label,\n  height,\n  offset,\n  dense,\n  fontSize,\n  isAndroid,\n  styles,\n}: AdjProps): Padding => {\n  let result = pad;\n  let topResult = result;\n  let bottomResult = result;\n  const { paddingTop, paddingBottom } = styles;\n  const refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    // do not modify padding if input is not multiline\n    if (label) {\n      // return const style for flat input with label\n      return { paddingTop, paddingBottom };\n    }\n    // return pad for flat input without label\n    return { paddingTop: result, paddingBottom: result };\n  }\n\n  if (label) {\n    // add paddings passed from styles\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    // adjust top padding for iOS\n    if (!isAndroid) {\n      if (dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(result, refFontSize * scale) - result / 2\n            : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(offset / 2, refFontSize * scale)\n            : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      // center text when height is passed\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2),\n      };\n    }\n    // adjust paddings for iOS if no label\n    if (!isAndroid) {\n      if (dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset / 2, (fontSize / 2) * scale)\n            : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset, fontSize * scale)\n            : Math.min(fontSize, (offset / 2) * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult),\n  };\n};\n\nexport const interpolatePlaceholder = (\n  labeled: Animated.Value,\n  hasActiveOutline: boolean | undefined\n) =>\n  labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1],\n  });\n\nexport function calculateFlatAffixTopPosition({\n  height,\n  paddingTop,\n  paddingBottom,\n  affixHeight,\n}: {\n  height: number;\n  paddingTop: number;\n  paddingBottom: number;\n  affixHeight: number;\n}): number {\n  const inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n\n  const halfOfTheInputHeightDecreasedByAffixHeight =\n    (inputHeightWithoutPadding - affixHeight) / 2;\n\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\n\nexport function calculateOutlinedIconAndAffixTopPosition({\n  height,\n  affixHeight,\n  labelYOffset,\n}: {\n  height: number;\n  affixHeight: number;\n  labelYOffset: number;\n}): number {\n  return (height - affixHeight + labelYOffset) / 2;\n}\n\nexport const calculateFlatInputHorizontalPadding = ({\n  adornmentConfig,\n}: {\n  adornmentConfig: AdornmentConfig[];\n}) => {\n  let paddingLeft = LABEL_PADDING_HORIZONTAL;\n  let paddingRight = LABEL_PADDING_HORIZONTAL;\n\n  adornmentConfig.forEach(({ type, side }) => {\n    if (type === AdornmentType.Icon && side === AdornmentSide.Left) {\n      paddingLeft = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === AdornmentSide.Right) {\n      if (type === AdornmentType.Affix) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === AdornmentType.Icon) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n\n  return { paddingLeft, paddingRight };\n};\n"],"mappings":"AAEA,SACEA,wBADF,EAEEC,gBAFF,EAGEC,cAHF,EAIEC,iBAJF,QAKO,aALP;AAMA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,mBAA7C;AAwBA,OAAO,MAAMC,yBAAyB,GAAG,UACvCC,WADuC,EAI5B;EAAA,IAFXC,MAEW,uEAFM,CAEN;EAAA,IADXC,eACW,uEADe,CACf;EACX,MAAMC,YAAY,GAAGF,MAAM,GAAG,CAAT,GAAaA,MAAb,GAAsB,CAA3C;EAEA,OAAOG,IAAI,CAACC,KAAL,CAAW,CAACF,YAAY,GAAGH,WAAhB,IAA+B,CAA/B,GAAmCE,eAA9C,CAAP;AACD,CARM;AAUP,OAAO,MAAMI,oBAAoB,GAAG,UAClCN,WADkC,EAIvB;EAAA,IAFXC,MAEW,uEAFG,CAEH;EAAA,IADXM,SACW;EACX,MAAMC,WAAW,GAAGP,MAAM,GAAG,CAAT,GAAaA,MAAb,GAAsBD,WAA1C;EAEA,IAAIC,MAAM,GAAG,CAAb,EAAgB,OAAOA,MAAP;EAChB,OAAOO,WAAW,GAAGD,SAAd,GAA0BA,SAA1B,GAAsCC,WAA7C;AACD,CATM;AAWP,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAiC;EAC/D,MAAM;IAAET,MAAF;IAAUU,SAAS,GAAG;EAAtB,IAAgCD,KAAtC;EAEA,IAAIE,MAAM,GAAG,CAAb;;EAEA,IAAID,SAAJ,EAAe;IACb,IAAIV,MAAM,IAAIU,SAAd,EAAyB;MACvBC,MAAM,GAAGC,wBAAwB,CAACH,KAAD,CAAjC;IACD,CAFD,MAEO;MACLE,MAAM,GAAGE,qBAAqB,CAACJ,KAAD,CAA9B;IACD;EACF;;EAED,OAAON,IAAI,CAACW,GAAL,CAAS,CAAT,EAAYH,MAAZ,CAAP;AACD,CAdM;;AAgBP,MAAMC,wBAAwB,GAAIH,KAAD,IAAyB;EACxD,MAAM;IAAEM;EAAF,IAAYN,KAAlB;EAEA,OAAOM,KAAK,GAAG,EAAH,GAAQ,EAApB;AACD,CAJD;;AAMA,MAAMF,qBAAqB,GAAG,QAQF;EAAA,IARG;IAC7BG,WAD6B;IAE7BC,QAF6B;IAG7BP,SAH6B;IAI7BQ,KAJ6B;IAK7BH,KAL6B;IAM7BI,MAN6B;IAO7BC;EAP6B,CAQH;EAC1B,MAAMC,WAAW,GAAGH,KAAK,GAAGD,QAA5B;EACA,IAAIN,MAAM,GAAGR,IAAI,CAACC,KAAL,CAAWY,WAAW,GAAG,CAAzB,CAAb;EAEAL,MAAM,GACJA,MAAM,GACNR,IAAI,CAACC,KAAL,CAAW,CAACiB,WAAW,GAAGJ,QAAf,IAA2B,CAAtC,CADA,IAECC,KAAK,GAAG,CAAR,GAAYC,MAAM,GAAG,CAArB,GAAyB,CAF1B,CADF;EAKA,IAAIT,SAAS,IAAIU,SAAjB,EACET,MAAM,GAAGR,IAAI,CAACmB,GAAL,CAASP,KAAK,GAAGI,MAAM,GAAG,CAAZ,GAAgBA,MAA9B,EAAsCR,MAAtC,CAAT;EAEF,OAAOA,MAAP;AACD,CArBD;;AAuBA,OAAO,MAAMY,gBAAgB,GAAG,SAWP;EAAA,IAXQ;IAC/BC,GAD+B;IAE/Bd,SAF+B;IAG/Be,KAH+B;IAI/BP,KAJ+B;IAK/BlB,MAL+B;IAM/BiB,QAN+B;IAO/BS,UAP+B;IAQ/BX,KAR+B;IAS/BI,MAT+B;IAU/BC;EAV+B,CAWR;EACvB,MAAMO,UAAU,GAAGD,UAAH,aAAGA,UAAH,cAAGA,UAAH,GAAiBT,QAAjC;EACA,MAAMW,aAAa,GAAGV,KAAK,GAAGD,QAA9B;EACA,IAAIN,MAAM,GAAGa,GAAb;;EAEA,IAAIxB,MAAM,IAAI,CAACU,SAAf,EAA0B;IACxB,OAAO;MACLmB,UAAU,EAAE1B,IAAI,CAACW,GAAL,CAAS,CAAT,EAAY,CAACd,MAAM,GAAG2B,UAAV,IAAwB,CAApC,CADP;MAELG,aAAa,EAAE3B,IAAI,CAACW,GAAL,CAAS,CAAT,EAAY,CAACd,MAAM,GAAG2B,UAAV,IAAwB,CAApC;IAFV,CAAP;EAID;;EACD,IAAI,CAACP,SAAD,IAAcV,SAAlB,EAA6B;IAC3B,IAAIK,KAAJ,EAAW;MACT,IAAIU,KAAJ,EAAW;QACTd,MAAM,IAAIO,KAAK,GAAG,CAAR,GAAYf,IAAI,CAACmB,GAAL,CAASH,MAAT,EAAkBS,aAAa,GAAG,CAAjB,GAAsBV,KAAvC,CAAZ,GAA4D,CAAtE;MACD,CAFD,MAEO;QACLP,MAAM,IAAI,CAAV;MACD;IACF;;IACD,IAAI,CAACI,KAAL,EAAY;MACV,IAAIU,KAAJ,EAAW;QACTd,MAAM,IACJO,KAAK,GAAG,CAAR,GACIf,IAAI,CAACmB,GAAL,CAASH,MAAT,EAAiBS,aAAa,GAAGV,KAAjC,CADJ,GAEIf,IAAI,CAACmB,GAAL,CAASH,MAAM,GAAG,CAAlB,EAAqBS,aAAa,GAAGV,KAArC,CAHN;MAID,CALD,MAKO;QACLP,MAAM,IAAIO,KAAK,GAAG,CAAR,GAAYf,IAAI,CAACmB,GAAL,CAASH,MAAM,GAAG,CAAlB,EAAqBS,aAAa,GAAGV,KAArC,CAAZ,GAA0D,CAApE;MACD;IACF;;IACDP,MAAM,GAAGR,IAAI,CAACC,KAAL,CAAWO,MAAX,CAAT;EACD;;EACD,OAAO;IAAEkB,UAAU,EAAElB,MAAd;IAAsBmB,aAAa,EAAEnB;EAArC,CAAP;AACD,CA3CM;AA6CP,OAAO,MAAMoB,iBAAiB,GAAG,SAWR;EAAA,IAXS;IAChCP,GADgC;IAEhCN,KAFgC;IAGhCR,SAHgC;IAIhCe,KAJgC;IAKhCzB,MALgC;IAMhCmB,MANgC;IAOhCJ,KAPgC;IAQhCE,QARgC;IAShCG,SATgC;IAUhCY;EAVgC,CAWT;EACvB,IAAIrB,MAAM,GAAGa,GAAb;EACA,IAAIS,SAAS,GAAGtB,MAAhB;EACA,IAAIuB,YAAY,GAAGvB,MAAnB;EACA,MAAM;IAAEkB,UAAF;IAAcC;EAAd,IAAgCE,MAAtC;EACA,MAAMX,WAAW,GAAGH,KAAK,GAAGD,QAA5B;;EAEA,IAAI,CAACP,SAAL,EAAgB;IACd;IACA,IAAIe,KAAJ,EAAW;MACT;MACA,OAAO;QAAEI,UAAF;QAAcC;MAAd,CAAP;IACD,CALa,CAMd;;;IACA,OAAO;MAAED,UAAU,EAAElB,MAAd;MAAsBmB,aAAa,EAAEnB;IAArC,CAAP;EACD;;EAED,IAAIc,KAAJ,EAAW;IACT;IACAQ,SAAS,GAAGJ,UAAZ;IACAK,YAAY,GAAGJ,aAAf,CAHS,CAKT;;IACA,IAAI,CAACV,SAAL,EAAgB;MACd,IAAIL,KAAJ,EAAW;QACTkB,SAAS,IACPf,KAAK,GAAG,CAAR,GACIf,IAAI,CAACmB,GAAL,CAASX,MAAT,EAAiBU,WAAW,GAAGH,KAA/B,IAAwCP,MAAM,GAAG,CADrD,GAEIR,IAAI,CAACmB,GAAL,CAASX,MAAT,EAAiBU,WAAW,GAAGH,KAA/B,IAAwCP,MAAM,GAAG,CAHvD;MAID;;MACD,IAAI,CAACI,KAAL,EAAY;QACVkB,SAAS,IACPf,KAAK,GAAG,CAAR,GACIf,IAAI,CAACmB,GAAL,CAASH,MAAM,GAAG,CAAlB,EAAqBE,WAAW,GAAGH,KAAnC,CADJ,GAEIf,IAAI,CAACmB,GAAL,CAASX,MAAT,EAAiBU,WAAW,GAAGH,KAA/B,IAAwCC,MAAM,GAAG,CAHvD;MAID;IACF;;IACDc,SAAS,GAAG9B,IAAI,CAACC,KAAL,CAAW6B,SAAX,CAAZ;EACD,CArBD,MAqBO;IACL,IAAIjC,MAAJ,EAAY;MACV;MACA,OAAO;QACL6B,UAAU,EAAE1B,IAAI,CAACW,GAAL,CAAS,CAAT,EAAY,CAACd,MAAM,GAAGiB,QAAV,IAAsB,CAAlC,CADP;QAELa,aAAa,EAAE3B,IAAI,CAACW,GAAL,CAAS,CAAT,EAAY,CAACd,MAAM,GAAGiB,QAAV,IAAsB,CAAlC;MAFV,CAAP;IAID,CAPI,CAQL;;;IACA,IAAI,CAACG,SAAL,EAAgB;MACd,IAAIL,KAAJ,EAAW;QACTJ,MAAM,IACJO,KAAK,GAAG,CAAR,GACIf,IAAI,CAACmB,GAAL,CAASH,MAAM,GAAG,CAAlB,EAAsBF,QAAQ,GAAG,CAAZ,GAAiBC,KAAtC,CADJ,GAEIf,IAAI,CAACmB,GAAL,CAASH,MAAM,GAAG,CAAlB,EAAqBD,KAArB,CAHN;MAID;;MACD,IAAI,CAACH,KAAL,EAAY;QACVJ,MAAM,IACJO,KAAK,GAAG,CAAR,GACIf,IAAI,CAACmB,GAAL,CAASH,MAAT,EAAiBF,QAAQ,GAAGC,KAA5B,CADJ,GAEIf,IAAI,CAACmB,GAAL,CAASL,QAAT,EAAoBE,MAAM,GAAG,CAAV,GAAeD,KAAlC,CAHN;MAID;;MAEDP,MAAM,GAAGR,IAAI,CAACC,KAAL,CAAWO,MAAX,CAAT;MACAsB,SAAS,GAAGtB,MAAZ;MACAuB,YAAY,GAAGvB,MAAf;IACD;EACF;;EAED,OAAO;IACLkB,UAAU,EAAE1B,IAAI,CAACW,GAAL,CAAS,CAAT,EAAYmB,SAAZ,CADP;IAELH,aAAa,EAAE3B,IAAI,CAACW,GAAL,CAAS,CAAT,EAAYoB,YAAZ;EAFV,CAAP;AAID,CAlFM;AAoFP,OAAO,MAAMC,sBAAsB,GAAG,CACpCC,OADoC,EAEpCC,gBAFoC,KAIpCD,OAAO,CAACE,WAAR,CAAoB;EAClBC,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADM;EAElBC,WAAW,EAAE,CAACH,gBAAgB,GAAG,CAAH,GAAO,CAAxB,EAA2B,CAA3B;AAFK,CAApB,CAJK;AASP,OAAO,SAASI,6BAAT,QAUI;EAAA,IAVmC;IAC5CzC,MAD4C;IAE5C6B,UAF4C;IAG5CC,aAH4C;IAI5CY;EAJ4C,CAUnC;EACT,MAAMC,yBAAyB,GAAG3C,MAAM,GAAG6B,UAAT,GAAsBC,aAAxD;EAEA,MAAMc,0CAA0C,GAC9C,CAACD,yBAAyB,GAAGD,WAA7B,IAA4C,CAD9C;EAGA,OAAOb,UAAU,GAAGe,0CAApB;AACD;AAED,OAAO,SAASC,wCAAT,QAQI;EAAA,IAR8C;IACvD7C,MADuD;IAEvD0C,WAFuD;IAGvDI;EAHuD,CAQ9C;EACT,OAAO,CAAC9C,MAAM,GAAG0C,WAAT,GAAuBI,YAAxB,IAAwC,CAA/C;AACD;AAED,OAAO,MAAMC,mCAAmC,GAAG,SAI7C;EAAA,IAJ8C;IAClDC;EADkD,CAI9C;EACJ,IAAIC,WAAW,GAAGzD,wBAAlB;EACA,IAAI0D,YAAY,GAAG1D,wBAAnB;EAEAwD,eAAe,CAACG,OAAhB,CAAwB,SAAoB;IAAA,IAAnB;MAAEC,IAAF;MAAQC;IAAR,CAAmB;;IAC1C,IAAID,IAAI,KAAKxD,aAAa,CAAC0D,IAAvB,IAA+BD,IAAI,KAAKxD,aAAa,CAAC0D,IAA1D,EAAgE;MAC9DN,WAAW,GAAGvD,cAAc,GAAGD,gBAAjB,GAAoCE,iBAAlD;IACD,CAFD,MAEO,IAAI0D,IAAI,KAAKxD,aAAa,CAAC2D,KAA3B,EAAkC;MACvC,IAAIJ,IAAI,KAAKxD,aAAa,CAAC6D,KAA3B,EAAkC;QAChCP,YAAY,GAAGxD,cAAc,GAAGD,gBAAjB,GAAoCE,iBAAnD;MACD,CAFD,MAEO,IAAIyD,IAAI,KAAKxD,aAAa,CAAC0D,IAA3B,EAAiC;QACtCJ,YAAY,GAAGxD,cAAc,GAAGD,gBAAjB,GAAoCE,iBAAnD;MACD;IACF;EACF,CAVD;EAYA,OAAO;IAAEsD,WAAF;IAAeC;EAAf,CAAP;AACD,CArBM"}